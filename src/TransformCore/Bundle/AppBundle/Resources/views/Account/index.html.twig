{% extends "::base.html.twig" %}

{% block title %}

    {% trans %}account.title{% endtrans %}

{% endblock %}

{% block heading %}

    <h1 class="form-title heading-large">{% trans %}account.title{% endtrans %}</h1>

{% endblock %}

{% block body %}

    <h2 class="heading-large">Fast Stream 2016</h2>

    {% if not hasApplicantCompletedProfile %}

        <h3 class="heading-medium">Registration: COMPLETE</h3>

        <p>Welcome to the Fast Stream {{ applicant.firstname }}.</p>

        <p>You must complete your details and application by 11:59 on 19th January 2016</p>

        <p>Your next task is to complete <a href="{{ path('transform_core_app_profile_edit') }}">My Details</a>.</p>

    {% else %}

        <h3 class="heading-medium">My Details: COMPLETE</h3>

        <p>Thank you. You have now completed the My Details section.</p>

        <p>If any of these details change, you can <a href="{{ path('transform_core_app_profile_edit') }}">update them</a>.</p>

        <p>Your next task is to select a scheme in the <a href="#">My Application section</a>.</p>

    {% endif %}

    <h2 class="heading-large">Your progress</h2>

    <div class="sections">

        <div class="section">

            <h3 class="heading-medium">1.&nbsp;&nbsp;<a href="{{ path('transform_core_app_profile_edit') }}">My Details</a></h3>

            <div class="action">

                {% if hasApplicantCompletedProfile %}

                    <a class="button" href="{{ path('transform_core_app_profile_edit') }}">Edit</a>

                {% else %}

                    {% if hasApplicantStartedProfile %}

                        <a class="button" href="{{ path('transform_core_app_profile_edit') }}">Continue</a>

                    {% else %}

                        <a class="button" href="{{ path('transform_core_app_profile_edit') }}">Start</a>

                    {% endif %}

                {% endif %}

            </div>

            <div class="status">

                {% if hasApplicantCompletedProfile %}

                    <span class="complete">Complete</span>

                {% else %}

                    {% if hasApplicantStartedProfile %}

                        <span class="incomplete">Incomplete</span>

                    {% else %}

                        <span class="not-started">Not started</span>

                    {% endif %}

                {% endif %}

            </div>

        </div>

        <div class="section">

            {% if hasApplicantCompletedProfile %}

                <h3 class="heading-medium">2.&nbsp;&nbsp;<a href="{{ path('transform_core_app_profile_edit') }}">My Application</a></h3>

            {% else %}

                <h3 class="heading-medium">2.&nbsp;&nbsp;My Application</h3>

            {% endif %}

            <div class="action">

                {% if hasApplicantCompletedProfile %}

                    <a class="button" href="{{ path('transform_core_app_profile_edit') }}">Start</a>

                {% else %}

                    <a class="button disabled" href="{{ path('transform_core_app_profile_edit') }}">Start</a>

                {% endif %}

            </div>

            <div class="status">

                <span class="not-started">Not started</span>

            </div>

        </div>

        {% block onlineAssessment %}
            <div class="section">

                <h3 class="heading-medium">3.&nbsp;&nbsp;Online Assessment</h3>

                <div class="action">
                    <a class="button disabled">Start</a>
                </div>

                <div class="status">
                    <span class="not-started">Not started</span>
                </div>

                <p class="sections">
                    The Online Assessment section starts with practice modules where you can test your own skills.
                    These modules are optional. You will then move on to the real online selection tests which will be submitted
                    to the Fast Stream for marking and assessment.
                </p>

                <table class="online-assessment">
                    <thead>
                        <th class="index"/>
                        <th class="fixed-wide">Assessment</th>
                        <th class="fixed">Required</th>
                        <th class="fixed">Due Date</th>
                        <th class="fixed-wide">Progress</th>
                        <th class="fixed">Completed</th>
                    </thead>

                    <tbody />
                </table>
            </div>
        {% endblock onlineAssessment %}

        <div class="section">

            <h3 class="heading-medium">4.&nbsp;&nbsp;E-Tray</h3>

            <div class="action">

                <a class="button disabled" href="{{ path('transform_core_app_profile_edit') }}">Start</a>

            </div>

            <div class="status">

                <span class="not-started">Not started</span>

            </div>

        </div>

    </div>

    <style>

        .sections .section { border-top: 1px solid #bfc1c3; height: 100%; overflow: hidden; }
        .sections .section h3 { float: left; }
        .sections .section .action { float: right; margin-top: 2em; min-width: 8em; text-align: right; }
        .sections .section .action a { min-width: 4em; text-align: center; }
        .sections .section .status { float: right; font-size: 80%; margin-right: 2em; margin-top: 3em; text-align: center; }
        .sections .section .status span { background-color: #DEE0E2; color: white; display: block; margin-top: -5px; padding-bottom: 5px; padding-top: 5px; width: 6em; }
        .sections .section .status span.complete { background-color: #85994B; }
        .sections .section .status span.incomplete { background-color: #F47738; }
        .sections .section .status span.not-started { background-color: #6F777B; }
        .test-trigger { cursor: pointer;}
        .hidden-trigger {color: #FFF;}
        .completed td { color: #CCC;}
        .current td { color: #005ea5;}
        .counter td { color: #000; }
        .online-assessment .index {width: 4%; margin: auto 0 auto;}
        .online-assessment .fixed {width: 14%}
        .online-assessment .fixed-wide {width: 27%}
        .section p {display: inline-block;}

    </style>

    <script type="text/javascript">
        $(document).ready(function(){
            assessmentData = [
                {
                    index       : 1,
                    name        : 'Self-assessed reasoning tests',
                    optional    : 'Optional',
                    class       : 'optional',
                    steps    : [
                        'Begin Verbal Reasoning Test',
                        'In Progress',
                        'Begin Numerical Reasoning Test',
                        'In Progress',
                        'Complete'
                    ]
                },
                {
                    index       : 2,
                    name        : 'Practice for the Online Selection Tests',
                    optional    : 'Optional',
                    class       : 'optional',
                    steps    : [
                        'Begin Verbal Reasoning Test',
                        'In Progress',
                        'Begin Numerical Reasoning Test',
                        'In Progress',
                        'Complete'
                    ]
                },
                {
                    index       : 3,
                    name        : 'Situational Judgment Questionnaire',
                    optional    : 'Optional',
                    class       : 'optional',
                    steps    : [
                        'Begin Test',
                        'In Progress',
                        'Complete'
                    ]
                },
                {
                    index       : 4,
                    name        : 'Online selection tests',
                    optional    : 'Compulsory',
                    class       : 'required',
                    steps       : [
                        'Begin Verbal Reasoning Test',
                        'In Progress',
                        'Begin Numerical Reasoning Test',
                        'In Progress',
                        'Begin Competency Questionnaire ',
                        'In Progress',
                        'Complete'
                    ],
                    outcomes  : [
                        'Successful',
                        'Unsuccessful',
                        'Awaiting results'
                    ]
                }
            ];

            assessments = {
                populateAssessments: function()
                {
                    var isCurrent =  false;

                    $.each(assessmentData, function(index, item) {
                        var currentStyle = '';
                        var triggerStyle = 'hidden-trigger';

                        if (false === isCurrent) {
                            currentStyle = " current";
                            triggerStyle = " test-trigger";
                            isCurrent = true;
                        }

                        var moreInfoHref = ('Optional' === item.optional) ? 'optional-step':'required-step';

                        var element =
                            "<tr class='" + item.class + currentStyle +"'>" +
                                "<td class='index'>" + item.index + "</td>" +
                                "<td>" + item.name + "</td>" +
                                "<td>" + item.optional + " <a href='#" + moreInfoHref +"' title='More information'>(?)</a></td>" +
                                "<td />" +
                                "<td class='" + triggerStyle + "' data-element='" + index + "' data-step='0' id='steps'>" + item.steps[0] + "</td>" +
                                "<td />" +
                            "</tr>";

                        $('.online-assessment tbody').append(element);

                    })
                },

                bindTriggers : function() {
                    var _this = this;
                    $('.test-trigger').on('click', function() {
                        if (undefined !== assessmentData[$(this).data('element')].steps[$(this).data('step')+1]) {
                            var stepText = assessmentData[$(this).data('element')].steps[$(this).data('step')+1];

                            $(this).html(stepText);
                            $(this).data('step', $(this).data('step')+1);

                            switch (stepText) {
                                case 'In Progress':
                                    $(this).prev().html(_this.getFuturedDate(7));
                                    $(this).next().html('');

                                    assessments.$currentObject = $(this);
                                    setTimeout(function() {
                                            assessments.$currentObject.trigger('click');
                                        },
                                        2000
                                    );
                                    break;
                                case 'Complete':
                                    $(this).prev().html('');
                                    $(this).next().html(_this.getFuturedDate(0));
                                    $(this).removeClass('test-trigger');
                                    $(this).parent().removeClass('current');
                                    $(this).parent('tr').next().addClass('current');
                                    $(this).parent('tr')
                                            .next()
                                            .find('#steps')
                                            .removeClass('hidden-trigger')
                                            .addClass('test-trigger');

                                    if (assessmentData.length <= ($(this).parent('tr').find('.index').html())) {

                                        if (undefined !== assessmentData[$(this).data('element')].outcomes) {
                                            var key =
                                                Math.floor(Math.random() * assessmentData[$(this).data('element')].outcomes.length);


                                            var tmpText = assessmentData[$(this).data('element')].outcomes[key];
                                            if ('Successful' !== tmpText) {
                                                outputText =
                                                        tmpText +
                                                        "<a href='#" +
                                                        tmpText.toLowerCase() +
                                                        "' title='More Information'>(?)</a>";
                                            } else {
                                                outputText = tmpText;
                                            }
                                            console.log(outputText);
                                        } else {
                                            var outputText = 'Complete';
                                        }

                                        $(this).parent('tr')
                                                .find('#steps')
                                                .html(outputText);

                                         $(this).closest('div')
                                              .find('.not-started')
                                              .removeClass('not-started')
                                              .addClass('complete')
                                              .html('Complete');
                                    }

                                    _this.bindTriggers();
                                    break;
                                default:
                                    $(this).prev().html('');
                                    $(this).next().html('');
                                    break;
                              }
                          }
                      })
                },


                getFuturedDate: function(offset) {
                    var today = new Date();
                    today.setDate(today.getDate() + offset);

                    return today.getDate() +'/' + (today.getMonth() + 1) + '/' + today.getFullYear();
                },

                init : function() {
                    this.populateAssessments();
                    this.bindTriggers();
                    window.assessmentData = assessmentData;
                }
            };

            assessments.init();

        });

    </script>

{% endblock %}


